<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing 2023 I</title><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/Shaders/</link><description>Recent content on Visual Computing 2023 I</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/Shaders/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/Shaders/Texturing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/Shaders/Texturing/</guid><description>Ejercicios: Texturing # UV Visualization # Exercise
Redefine the shape texture coordinates to turn the above image upside down.
UV Visualization js let uvShader; function preload() { // Define geometry directly in clip space (i.e., matrices: Tree.NONE). // Interpolate only texture coordinates (i.e., varyings: Tree.texcoords2). // see: https://github.com/VisualComputing/p5.treegl#handling uvShader = readShader(&amp;#39;/showcase/sketches/SHADERS/UV_v/UV_inv.frag&amp;#39;, { matrices: Tree.NONE, varyings: Tree.texcoords2 }); } function setup() { // shaders require WEBGL mode to work createCanvas(300, 300, WEBGL); noStroke(); // see: https://p5js.</description></item></channel></rss>