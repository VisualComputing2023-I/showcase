<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing 2023 I</title><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/</link><description>Recent content on Visual Computing 2023 I</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/1-Visual-Illutions/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/1-Visual-Illutions/</guid><description>1 - Visual Illutions # Exercise
Estudiar, poner en práctica y discutir posibles aplicaciones de algunos fenómenos visuales e ilusiones ópticas conocidos. Introducción # ¿Qué es una ilusión óptica? # Una ilusión óptica es una imagen que engaña el sistema visual, desde el ojo al cerebro, y lo lleva a percibir la realidad de forma distorsionada.
Las ilusiones ópticas pueden suceder de manera natural o ser creadas por efectos visuales específicos.</description></item><item><title/><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/2-Masking/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/2-Masking/</guid><description>2 - Masking # Ejercicio Implementar un kinegram y algunos patrones de moiré que están estrechamente relacionado con el fenómeno de masking. Introducción # Kinegram - Scanimation # Los scanimations son un tipo de kinegramas. Estos son una ilusión óptica que se produce cuando un dibujo, fotograma opatrón gráfico adquiere movimiento.
Consta de dos partes: un dibujo “formado por diversas rayas de diferentegrosor y disposición” y una pantalla transparente de plástico con franjas o rayas.</description></item><item><title/><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/3-Mach-Bands/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/3-Mach-Bands/</guid><description>3 - Mach Bands # Ejercicio Desarrolle una aplicación de visualización de terrenos. Revise el tutorial de Coding Train sobre la generación de terrenos en 3D con ruido de Perlin.
Introducción # La visualización de terrenos se ha realizado por muchos años mediante modos tradicionales con dibujos en representaciones planas en 2D para fines militares y de estudio de la geografía. Pero con la llegada de la computación y la capacidad de generar imagenes en 3D, se desarrollaron diferentes técnicas para poder visualizar y crear terrenos para no solo los mismos fines sino también otros como los videojuegos y los simuladores de vuelos.</description></item><item><title/><link>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/3DApplication/3DApp/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://visualcomputing2023-i.github.io/showcase/docs/shortcodes/VisualIllutions/3DApplication/3DApp/</guid><description>Workshop: 3D WebGL app # Workshop
Implement a 3d webgl application. The p5.treegl or any other libraries may be used. Problem statement # Design and implement a 3D Application using WebGL, through some library or framwork based on it.
Background # WebGL # WebGL is an API for creating 3D graphics on web browsers without the need for any additional plug-ins, and is itself based on the OpenGL API. It uses the Canvas element from HTML to visualize the resulting graphics, and therefore is integrated with the DOM model.</description></item></channel></rss>